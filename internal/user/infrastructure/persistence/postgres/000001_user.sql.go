// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: 000001_user.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  username,
  full_name,
  gender,
  email,
  phone_number,
  date_of_birth,
  address
) VALUES (
  $1, $2, $3, $4, $5, $6, $7
) RETURNING user_id, username, full_name, gender, email, phone_number, date_of_birth, address, created_at, updated_at, is_active, role
`

type CreateUserParams struct {
	Username    string      `json:"username"`
	FullName    string      `json:"full_name"`
	Gender      pgtype.Text `json:"gender"`
	Email       string      `json:"email"`
	PhoneNumber pgtype.Text `json:"phone_number"`
	DateOfBirth pgtype.Date `json:"date_of_birth"`
	Address     pgtype.Text `json:"address"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Username,
		arg.FullName,
		arg.Gender,
		arg.Email,
		arg.PhoneNumber,
		arg.DateOfBirth,
		arg.Address,
	)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.FullName,
		&i.Gender,
		&i.Email,
		&i.PhoneNumber,
		&i.DateOfBirth,
		&i.Address,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.IsActive,
		&i.Role,
	)
	return i, err
}
